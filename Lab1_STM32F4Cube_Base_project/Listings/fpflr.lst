


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             FIR_Filter, CODE, READONLY
    2 00000000         
    3 00000000                 EXPORT           FIR_asm
    4 00000000         ;;r0, input, r1, output, r2, size, r3, inputcoeffs
    5 00000000         
    6 00000000         ;;s5, used to accumulate output values
    7 00000000         ;;r6, used to store the end condition
    8 00000000         
    9 00000000         
   10 00000000         FIR_asm                              ;FIR_asm(float32_t 
                                                            * InputArray, float
                                                            32_t* OutputArray,i
                                                            nt blockSize, float
                                                            32_t* coeffs)
   11 00000000         
   12 00000000 F04F 0604       MOV              r6, #4      ;set r6 to 4, this 
                                                            is required for the
                                                             MUL as it cant tak
                                                            e constants
   13 00000004 F1A2 0204       SUB              r2, r2, #4  ;set r2 minus the o
                                                            rder, 4, gives the 
                                                            number of loops nee
                                                            ded to cover entire
                                                             input array
   14 00000008 FB02 F206       MUL              r2, r2, r6  ;multiply the numbe
                                                            r of loops needed b
                                                            y 4, gives the numb
                                                            er of bytes the oup
                                                            ut pointer will be 
                                                            incremented by the 
                                                            end
   15 0000000C EB01 0602       ADD              r6, r1, r2  ;add the numberof b
                                                            ytes to be incremen
                                                            ted to the address 
                                                            of output[0] 
   16 00000010         
   17 00000010         
   18 00000010         start
   19 00000010 ED93 3A00       VLDR.F32         s6, [r3,#0] ;puts the first coe
                                                            ff in s6, needs to 
                                                            be in a register fo
                                                            r VMUL to take it 
   20 00000014 EDD0 3A00       VLDR.F32         s7, [r0,#0] ;puts the first inp
                                                            ut value correspond
                                                            ing to the current 
                                                            output in s7
   21 00000018 EE63 2A23       VMUL.F32         s5, s6, s7  ;multiplies s6 by s
                                                            7 and puts the resu
                                                            lt in s5, accumulat
                                                            e not used here sin
                                                            ce this is the firs
                                                            t term in the sum f
                                                            or this output 
   22 0000001C         
   23 0000001C ED93 3A01       VLDR.F32         s6, [r3,#4] ;sets s6 to the sec
                                                            ond coeff
   24 00000020 EDD0 3A01       VLDR.F32         s7, [r0,#4] ;sets s7 to the sec
                                                            ond input for the c
                                                            urrent output



ARM Macro Assembler    Page 2 


   25 00000024 EEE3 2A23       VFMA.F32         s5, s6, s7  ;multiplies s6 by s
                                                            7 and adds the resu
                                                            lt to whats current
                                                            ly in s5
   26 00000028         
   27 00000028 ED93 3A02       VLDR.F32         s6, [r3,#8]
   28 0000002C EDD0 3A02       VLDR.F32         s7, [r0,#8]
   29 00000030 EEE3 2A23       VFMA.F32         s5, s6, s7
   30 00000034         
   31 00000034 ED93 3A03       VLDR.F32         s6, [r3,#12] ;IF SYMMETRICAL NO
                                                            T NEEDED
   32 00000038 EDD0 3A03       VLDR.F32         s7, [r0,#12] ;IF SYMMETRICAL NO
                                                            T NEEDED 
   33 0000003C EEE3 2A23       VFMA.F32         s5, s6, s7
   34 00000040         
   35 00000040 ED93 3A04       VLDR.F32         s6, [r3,#16] ;IF SYMMETRICAL NO
                                                            T NEEDED 
   36 00000044 EDD0 3A04       VLDR.F32         s7, [r0,#16] ;IF SYMMETRICAL NO
                                                            T NEEDED 
   37 00000048 EEE3 2A23       VFMA.F32         s5, s6, s7
   38 0000004C         
   39 0000004C EDC1 2A00       VSTR.F32         s5, [r1]    ;adds the current o
                                                            utput sum to its ar
                                                            ray
   40 00000050         
   41 00000050 F101 0104       ADD              r1,r1,#4    ;moves the pointer 
                                                            to the output array
                                                             to the next entry 
                                                            location
   42 00000054 F100 0004       ADD              r0,r0,#4    ;moves the pointer 
                                                            to the first input 
                                                            value to correspond
                                                             with the next outp
                                                            ut value
   43 00000058 42B1            CMP              r1, r6      ;compares the point
                                                            er value of the out
                                                            put array to its en
                                                            d condition
   44 0000005A D000            beq              return      ;if it meets the en
                                                            d condition return 
                                                            to the calling func
                                                            tion
   45 0000005C         
   46 0000005C E7D8            b                start       ;otherwise return t
                                                            o calculating the n
                                                            ext output value
   47 0000005E         
   48 0000005E         return
   49 0000005E 4770            bx               lr
   50 00000060                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\fpflr.d -o.\objects\fpflr.o -I"\vmware-host\Shared Fo
lders\Desktop\Lab1_STM32F4Cube_Base_project\Lab1_STM32F4Cube_Base_project\RTE\_
Lab_1" -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\CMSIS\Include -IC:\Keil_v5\ARM\PAC
K\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include --predefi
ne="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 522" --predefine="_RTE_ 
SETA 1" --predefine="STM32F407xx SETA 1" --list=.\listings\fpflr.lst fpflr.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FIR_Filter 00000000

Symbol: FIR_Filter
   Definitions
      At line 1 in file fpflr.s
   Uses
      None
Comment: FIR_Filter unused
FIR_asm 00000000

Symbol: FIR_asm
   Definitions
      At line 10 in file fpflr.s
   Uses
      At line 3 in file fpflr.s
Comment: FIR_asm used once
return 0000005E

Symbol: return
   Definitions
      At line 48 in file fpflr.s
   Uses
      At line 44 in file fpflr.s
Comment: return used once
start 00000010

Symbol: start
   Definitions
      At line 18 in file fpflr.s
   Uses
      At line 46 in file fpflr.s
Comment: start used once
4 symbols
339 symbols in table
